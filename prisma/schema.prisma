// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  logo        String?
  
  users              User[]
  employmentStatuses EmploymentStatus[]
  leaveTypes         LeaveType[]
  employeeLevels     EmployeeLevel[]
  empLeaveHistories  EmpLeaveHistory[]
  leaveBalances      LeaveBalance[]
  leaveAllocations   LeaveAllocation[]
}

model User {
  id               Int       @id @default(autoincrement())
  organizationId   Int
  firstName        String
  lastName         String
  email            String    @unique
  gender           String
  employmentStatus Int
  employeeLevel    Int
  startDate        DateTime?
  endDate          DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  createdBy        Int?
  updatedBy        Int?
  
  organization     Organization @relation(fields: [organizationId], references: [id])
  empLeaveHistories EmpLeaveHistory[]
  leaveBalances    LeaveBalance[]

  @@index([organizationId])
}

model EmploymentStatus {
  id            Int          @id @default(autoincrement())
  status        String
  description   String?
  organizationId Int

  organization  Organization @relation(fields: [organizationId], references: [id])

  @@index([organizationId])
}

model EmployeeLevel {
  id            Int           @id @default(autoincrement())
  name          String
  description   String?
  organizationId Int

  organization  Organization @relation(fields: [organizationId], references: [id])
  leaveAllocations LeaveAllocation[]

  @@index([organizationId])
}

model LeaveType {
  id            Int           @id @default(autoincrement())
  name          String
  description   String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  createdBy     Int
  updatedBy     Int
  organizationId Int

  organization  Organization @relation(fields: [organizationId], references: [id])
  empLeaveHistories EmpLeaveHistory[]
  leaveAllocations LeaveAllocation[]
  leaveBalances    LeaveBalance[]

  @@index([organizationId])
}

model LeaveAllocation {
  id             Int            @id @default(autoincrement())
  employeeLevelId Int
  leaveTypeId    Int
  totalLeaveHours Int
  organizationId Int

  employeeLevel  EmployeeLevel @relation(fields: [employeeLevelId], references: [id])
  leaveType      LeaveType     @relation(fields: [leaveTypeId], references: [id])
  organization   Organization  @relation(fields: [organizationId], references: [id])

  @@index([employeeLevelId, leaveTypeId])
  @@index([organizationId])
}

model EmpLeaveHistory {
  id            Int           @id @default(autoincrement())
  organizationId Int
  employeeId    Int
  leaveTypeId   Int
  leaveHours    Int
  status        String
  approvedBy    Int
  comments      String?

  employee      User           @relation(fields: [employeeId], references: [id])
  leaveType     LeaveType      @relation(fields: [leaveTypeId], references: [id])
  organization  Organization   @relation(fields: [organizationId], references: [id])

  @@index([employeeId, leaveTypeId, status, approvedBy])
  @@index([organizationId])
}

model LeaveBalance {
  id               Int        @id @default(autoincrement())
  leaveTypeId      Int
  employeeId       Int
  usedLeaveHours   Int
  leaveAllocatedHours Int
  lastUpdated      DateTime   @default(now())
  createdBy        Int
  updatedBy        Int
  organizationId   Int

  employee         User        @relation(fields: [employeeId], references: [id])
  leaveType        LeaveType   @relation(fields: [leaveTypeId], references: [id])
  organization     Organization @relation(fields: [organizationId], references: [id])

  @@index([leaveTypeId, employeeId])
  @@index([organizationId])
}